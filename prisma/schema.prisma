generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model task {
  task_id                        Int       @id @default(autoincrement())
  title                          String    @db.VarChar(164)
  description                    String?   @db.VarChar(256)
  creator_id                     Int
  responsible_id                 Int?
  date_of_creation               DateTime? @db.DateTime(0)
  date_of_completion             DateTime? @db.DateTime(0)
  parent_id                      Int?
  status_task_id                 Int?
  user                           user      @relation(fields: [creator_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "task_ibfk_1")
  user_task_responsible_idTouser user?     @relation("task_responsible_idTouser", fields: [responsible_id], references: [user_id], onUpdate: NoAction, map: "fk_responsibleId_To_userId")

  @@index([creator_id], map: "fk_creatorId_To_userId_idx")
  @@index([creator_id, responsible_id], map: "fk_creatorId_userId_idx")
  @@index([responsible_id], map: "fk_responsibleId_To_userId_idx")
}

model user {
  user_id                        Int            @id @default(autoincrement())
  name                           String         @db.VarChar(64)
  date_of_creation               DateTime       @db.DateTime(0)
  last_name                      String?        @db.VarChar(64)
  password                       String         @db.VarChar(256)
  email                          String         @unique(map: "email_UNIQUE") @db.VarChar(64)
  avatar                         String?        @db.VarChar(124)
  tarif_id                       Int?
  task                           task[]
  task_task_responsible_idTouser task[]         @relation("task_responsible_idTouser")
  user_to_team                   user_to_team[]
}

model status_task {
  status_task_id Int    @id
  name_status    String @db.VarChar(124)
}

model tarif {
  tarif_id Int    @id @default(autoincrement())
  name     String @db.VarChar(64)
  price    Int
}

model user_role {
  role_id   Int     @id @default(autoincrement())
  name_role String? @db.VarChar(64)
}

model team {
  team_id      Int            @id @default(autoincrement())
  name_team    String?        @db.VarChar(124)
  user_to_team user_to_team[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model user_to_team {
  user_to_team_id Int  @id @default(autoincrement())
  team_id         Int
  user_id         Int
  team            team @relation(fields: [team_id], references: [team_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_team_team_id")
  user            user @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_user_id")

  @@index([team_id], map: "fk_team_team_id_idx")
  @@index([user_id], map: "fk_user_user_id_idx")
}
